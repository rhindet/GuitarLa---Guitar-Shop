{
  "version": 3,
  "sources": ["../../../../app/routes/blog/$postUrl.jsx"],
  "sourcesContent": ["import { useLoaderData } from '@remix-run/react';\r\nimport { getPost } from '~/models/post.server'\r\nimport { formatearFecha } from '~/utils/helpers'\r\n\r\n\r\n\r\nexport function meta({ data }) {\r\n  if (!data) {\r\n    return {\r\n      title: 'GuitarLA - Entrada No Encontrada',\r\n      descripcion: 'Guitarras , venta de guitarras , Entrada No Encontrada'\r\n    }\r\n  }\r\n  return {\r\n    title: `GuitarLA - ${data.data[0].attributes.titulo}`,\r\n    descripcion: `Guitarras , venta de guitarras , entrada ${data.data[0].attributes.titulo}`\r\n  }\r\n}\r\n\r\n\r\n\r\nexport async function loader({ params }) {\r\n\r\n  const { postUrl } = params;\r\n  const post = await getPost(postUrl)\r\n  if (post.data.length === 0) {\r\n    throw new Response('', {\r\n      status: 404,\r\n      statusText: ' Entrada no encontrada'\r\n    })\r\n  }\r\n  return post\r\n}\r\n\r\nexport default function Post() {\r\n\r\n  const post = useLoaderData()\r\n  const { titulo, contenido, imagen, publishedAt } = post?.data[0]?.attributes\r\n  return (\r\n    <article className=\" post mt-3\">\r\n\r\n      <img src={imagen?.data?.attributes?.url} alt={`imagen blog ${titulo}`} className=\"imagen\" />\r\n      <div className=\"contenido\">\r\n        <h3>{titulo}</h3>\r\n        <p className=\"fecha\">{formatearFecha(publishedAt)}</p>\r\n        <p className=\"texto\">{contenido}</p>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AACA,kBAAwB;AADxB;AAMO,SAAS,KAAK,EAAE,KAAK,GAAG;AAC7B,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA,IACf;AAAA,EACF;AACA,SAAO;AAAA,IACL,OAAO,cAAc,KAAK,KAAK,GAAG,WAAW;AAAA,IAC7C,aAAa,4CAA4C,KAAK,KAAK,GAAG,WAAW;AAAA,EACnF;AACF;AAiBe,SAAR,OAAwB;AAlC/B;AAoCE,QAAM,OAAO,cAAc;AAC3B,QAAM,EAAE,QAAQ,WAAW,QAAQ,YAAY,KAAI,kCAAM,KAAK,OAAX,mBAAe;AAClE,SACE,mDAAC;AAAA,IAAQ,WAAU;AAAA,IAEjB;AAAA,yDAAC;AAAA,QAAI,MAAK,4CAAQ,SAAR,mBAAc,eAAd,mBAA0B;AAAA,QAAK,KAAK,eAAe;AAAA,QAAU,WAAU;AAAA,SAAjF;AAAA;AAAA;AAAA;AAAA,aAA0F;AAAA,MAC1F,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb;AAAA,6DAAC;AAAA,YAAI;AAAA,aAAL;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA,UACZ,mDAAC;AAAA,YAAE,WAAU;AAAA,YAAS,yBAAe,WAAW;AAAA,aAAhD;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA,UAClD,mDAAC;AAAA,YAAE,WAAU;AAAA,YAAS;AAAA,aAAtB;AAAA;AAAA;AAAA;AAAA,iBAAgC;AAAA;AAAA,SAHlC;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;",
  "names": []
}
